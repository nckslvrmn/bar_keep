# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/pp/all/pp.rbi
#
# pp-0.6.2

class PP < PrettyPrint
  def self.mcall(obj, mod, meth, *args, &block); end
  def self.pp(obj, out = nil, width = nil); end
  def self.sharing_detection; end
  def self.sharing_detection=(b); end
  def self.singleline_pp(obj, out = nil); end
  def self.width_for(out); end
  include PP::PPMethods
end
module PP::PPMethods
  def check_inspect_key(id); end
  def comma_breakable; end
  def guard_inspect_key; end
  def object_address_group(obj, &block); end
  def object_group(obj, &block); end
  def pop_inspect_key(id); end
  def pp(obj); end
  def pp_hash(obj); end
  def pp_hash_pair(k, v); end
  def pp_object(obj); end
  def push_inspect_key(id); end
  def seplist(list, sep = nil, iter_method = nil); end
end
class PP::SingleLine < PrettyPrint::SingleLine
  include PP::PPMethods
end
module PP::ObjectMixin
  def pretty_print(q); end
  def pretty_print_cycle(q); end
  def pretty_print_inspect; end
  def pretty_print_instance_variables; end
end
class Array
  def pretty_print(q); end
  def pretty_print_cycle(q); end
end
class Hash
  def pretty_print(q); end
  def pretty_print_cycle(q); end
end
class Struct
  def pretty_print(q); end
  def pretty_print_cycle(q); end
end
class Data
  def pretty_print(q); end
  def pretty_print_cycle(q); end
end
class Range
  def pretty_print(q); end
end
class String
  def pretty_print(q); end
end
class File < IO
end
class File::Stat
  def pretty_print(q); end
end
class MatchData
  def pretty_print(q); end
end
class RubyVM::AbstractSyntaxTree::Node
  def pretty_print(q); end
  def pretty_print_children(q, names = nil); end
end
class Object < BasicObject
  include PP::ObjectMixin
end
class Numeric
  def pretty_print(q); end
  def pretty_print_cycle(q); end
end
class Symbol
  def pretty_print_cycle(q); end
end
class FalseClass
  def pretty_print(q); end
  def pretty_print_cycle(q); end
end
class TrueClass
  def pretty_print(q); end
  def pretty_print_cycle(q); end
end
class NilClass
  def pretty_print_cycle(q); end
end
class Module
  def pretty_print(q); end
  def pretty_print_cycle(q); end
end
module Kernel
  def pretty_inspect; end
  def self.pp(*objs); end
end
